//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace ScrumMainApp.Models
{
    public partial class ScrumDBEntities2 : ObjectContext
    {
        public const string ConnectionString = "name=ScrumDBEntities2";
        public const string ContainerName = "ScrumDBEntities2";
    
        #region Constructors
    
        public ScrumDBEntities2()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public ScrumDBEntities2(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public ScrumDBEntities2(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<BacklogItem> BacklogItems
        {
            get { return _backlogItems  ?? (_backlogItems = CreateObjectSet<BacklogItem>("BacklogItems")); }
        }
        private ObjectSet<BacklogItem> _backlogItems;
    
        public ObjectSet<CompanyRole> CompanyRoles
        {
            get { return _companyRoles  ?? (_companyRoles = CreateObjectSet<CompanyRole>("CompanyRoles")); }
        }
        private ObjectSet<CompanyRole> _companyRoles;
    
        public ObjectSet<Participation> Participations
        {
            get { return _participations  ?? (_participations = CreateObjectSet<Participation>("Participations")); }
        }
        private ObjectSet<Participation> _participations;
    
        public ObjectSet<Project> Projects
        {
            get { return _projects  ?? (_projects = CreateObjectSet<Project>("Projects")); }
        }
        private ObjectSet<Project> _projects;
    
        public ObjectSet<Role> Roles
        {
            get { return _roles  ?? (_roles = CreateObjectSet<Role>("Roles")); }
        }
        private ObjectSet<Role> _roles;
    
        public ObjectSet<Sprint> Sprints
        {
            get { return _sprints  ?? (_sprints = CreateObjectSet<Sprint>("Sprints")); }
        }
        private ObjectSet<Sprint> _sprints;
    
        public ObjectSet<Status> Status
        {
            get { return _status  ?? (_status = CreateObjectSet<Status>("Status")); }
        }
        private ObjectSet<Status> _status;
    
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get { return _sysdiagrams  ?? (_sysdiagrams = CreateObjectSet<sysdiagram>("sysdiagrams")); }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        public ObjectSet<Task> Tasks
        {
            get { return _tasks  ?? (_tasks = CreateObjectSet<Task>("Tasks")); }
        }
        private ObjectSet<Task> _tasks;
    
        public ObjectSet<User> Users
        {
            get { return _users  ?? (_users = CreateObjectSet<User>("Users")); }
        }
        private ObjectSet<User> _users;

        #endregion
    }
}
